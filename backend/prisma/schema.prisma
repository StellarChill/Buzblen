datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model EmployeeDetails {
  EmployeeID      String   @id @default(uuid()) @db.Uuid
  Email           String   @unique @db.VarChar(100) // ใช้ @unique เพื่อป้องกัน Email ซ้ำ
  Password        String   @db.VarChar(255) // รหัสผ่านเข้ารหัส

  // Relations
  Posts           PostDetails[]
  Comments        CommentDetails[]
  Likes           LikeDetails[]
  DevDetails      DevDetails[]
}

model PostDetails {
  PostID          String   @id @default(uuid()) @db.Uuid
  EmployeeID      String   @db.Uuid
  PostDescription String
  PostStatus      String
  DateCreated     DateTime @default(now())
  ImageURL        String
  IsDeleted       Boolean  @default(false)

  Employee        EmployeeDetails @relation(fields: [EmployeeID], references: [EmployeeID], onDelete: Cascade)
  Comments        CommentDetails[]
  Likes           LikeDetails[]
}

model CommentDetails {
  CommentID       String   @id @default(uuid()) @db.Uuid
  EmployeeID      String   @db.Uuid
  PostID          String   @db.Uuid
  CommentText     String
  DateCommented   DateTime @default(now())

  Employee        EmployeeDetails @relation(fields: [EmployeeID], references: [EmployeeID], onDelete: Cascade)
  Post            PostDetails     @relation(fields: [PostID], references: [PostID], onDelete: Cascade)
}

model LikeDetails {
  LikeID          String   @id @default(uuid()) @db.Uuid
  EmployeeID      String   @db.Uuid
  PostID          String   @db.Uuid
  DateLiked       DateTime @default(now())

  Employee        EmployeeDetails @relation(fields: [EmployeeID], references: [EmployeeID], onDelete: Cascade)
  Post            PostDetails     @relation(fields: [PostID], references: [PostID], onDelete: Cascade)
}





model DevDetails {
  DevID           String   @id @default(uuid()) @db.Uuid
  EmployeeID      String   @db.Uuid
  DateOfBlock     DateTime
  ReasonOfBlock   String
  DateOfDelete    DateTime?
  ReasonOfDelete  String?

  Employee        EmployeeDetails @relation(fields: [EmployeeID], references: [EmployeeID], onDelete: Cascade)
}

